// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.CrimeUsMap = (function(_super) {
    __extends(CrimeUsMap, _super);

    function CrimeUsMap(id, geometry, data, color, domain) {
      this.hide_details = __bind(this.hide_details, this);
      this.show_details = __bind(this.show_details, this);
      this.display = __bind(this.display, this);
      CrimeUsMap.__super__.constructor.call(this, id, geometry);
      this.delay = 4000;
      this.data = data;
      this.allStates = new AllStates(id, d3.values(data), color, domain);
      this.crimes = [];
    }

    CrimeUsMap.prototype.display = function() {
      var color_class;
      this.allStates.crimes = this.crimes;
      this.allStates.update_data();
      this.allStates.cleanup();
      CrimeUsMap.__super__.display.call(this);
      this.legend = new Legend(this.enclosingContainer, ((function(_this) {
        return function(i) {
          return _this.allStates.color_class(_this.allStates.domain[i] - 1);
        };
      })(this)), this.allStates.legend_text(), 'Crime per 100,000 population', {
        x: 75,
        y: 40
      });
      this.legend.show(true);
      this.enclosingContainer.attr("class", this.allStates.colorScheme);
      color_class = (function(_this) {
        return function(state) {
          return _this.allStates.color_class(_this.data[state.toUpperCase()].group);
        };
      })(this);
      this.states = this.states.style("fill", null).attr("class", function(d) {
        return color_class(d.properties.name);
      });
      this.states = this.states.attr("stroke-width", 2).attr("stroke", function(d) {
        return d3.rgb($(this).css("fill")).darker();
      });
      return this.create_cities();
    };

    CrimeUsMap.prototype.show_details = function(data) {
      return this.allStates.show_details(this.data[data.properties.name.toUpperCase()]);
    };

    CrimeUsMap.prototype.hide_details = function(data) {
      return this.allStates.hide_details(this.data[data.properties.name.toUpperCase()]);
    };

    return CrimeUsMap;

  })(UsMap);

}).call(this);
