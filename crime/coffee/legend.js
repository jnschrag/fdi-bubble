// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.Legend = (function() {
    function Legend(svg, color_class, data, description, start, isVertical, helpText) {
      this.translate = __bind(this.translate, this);
      this.set_title = __bind(this.set_title, this);
      this.show = __bind(this.show, this);
      isVertical = isVertical != null ? isVertical : false;
      if ((description != null)) {
        this.title = svg.append("text").attr("x", start.x).attr("y", start.y + (isVertical ? 0 : 30)).attr("visibility", "hidden").text(description);
        if (helpText != null) {
          this.title = this.title.attr("fill", "#08C").on("mouseover", function() {
            return d3.select(this).style("cursor", "help");
          }).on("mouseout", function() {
            return d3.select(this).style("cursor", "auto");
          });
          this.title.append("title").text(helpText);
        }
      }
      this.legend = svg.selectAll("#vis_legend").data(data).enter().append("g").attr("id", "vis_legend").attr("visibility", "hidden").attr("transform", (function(_this) {
        return function(d, i) {
          return _this.translate(start, i, isVertical);
        };
      })(this));
      this.legend.append("circle").attr("class", function(d, i) {
        return color_class(i);
      }).attr("r", 4).attr("stroke-width", 1).attr("stroke", function(d, i) {
        return d3.rgb($(this).css("fill")).darker();
      });
      this.legend.append("text").attr("x", 14).attr("dy", ".35em").text(String);
    }

    Legend.prototype.show = function(isVisible) {
      this.legend.attr("visibility", isVisible ? "visible" : "hidden");
      return this.title.attr("visibility", isVisible ? "visible" : "hidden");
    };

    Legend.prototype.set_title = function(text) {
      return this.title.text(text);
    };

    Legend.prototype.translate = function(start, i, isVertical) {
      if (isVertical) {
        return "translate(" + start.x + ", " + (start.y + 10 + i * 22) + ")";
      } else {
        return "translate(" + (start.x + i * 65) + ", " + start.y + ")";
      }
    };

    return Legend;

  })();

}).call(this);
